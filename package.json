{
  "name": "pretext-tools",
  "displayName": "PreTeXt-tools",
  "description": "Language support and more for PreTeXt",
  "version": "0.11.2",
  "license": "See license in LICENSE",
  "icon": "logo.png",
  "publisher": "oscarlevin",
  "repository": "https://github.com/oscarlevin/pretext-tools",
  "engines": {
    "vscode": "^1.70.0"
  },
  "categories": [
    "Programming Languages",
    "Snippets"
  ],
  "activationEvents": [
    "onLanguage:pretext",
    "workspaceContains:project.ptx",
    "onCommand:pretext-tools.buildAny",
    "onCommand:pretext-tools.buildDefault",
    "onCommand:pretext-tools.new",
    "onCommand:pretext-tools.view",
    "onCommand:pretext-tools.viewWatch",
    "onCommand:pretext-tools.generate",
    "onCommand:pretext-tools.updatePTX",
    "onCommand:pretext-tools.refresh",
    "onCommand:pretext-tools.convertToPretext"
  ],
  "main": "./out/extension.js",
  "extensionDependencies": [
    "redhat.vscode-xml"
  ],
  "contributes": {
    "languages": [
      {
        "id": "pretext",
        "aliases": [
          "PreTeXt",
          "ptx"
        ],
        "extensions": [
          ".ptx"
        ],
        "configuration": "./language-configuration.json"
      }
    ],
    "grammars": [
      {
        "language": "pretext",
        "scopeName": "text.xml.ptx",
        "path": "./syntaxes/ptx.tmLanguage.json",
        "embeddedLanguages": {
          "text.tex": "tex",
          "text.tex.latex": "latex",
          "support.class.math.block.environment.latex": "latex",
          "source.asymptote": "asymptote"
        }
      }
    ],
    "snippets": [
      {
        "language": "pretext",
        "path": "./snippets/pretext.json"
      },
      {
        "language": "pretext",
        "path": "./snippets/pretext-blocks.json"
      },
      {
        "language": "pretext",
        "path": "./snippets/pretext-attributes.json"
      },
      {
        "language": "pretext",
        "path": "./snippets/pretext-templates.json"
      }
    ],
    "keybindings": [
      {
        "command": "pretext-tools.buildAny",
        "key": "ctrl+alt+b",
        "mac": "cmd+alt+b",
        "when": "editorTextFocus && editorLangId == 'pretext'"
      },
      {
        "command": "pretext-tools.view",
        "key": "ctrl+alt+v",
        "mac": "cmd+alt+v",
        "when": "editorTextFocus && editorLangId == 'pretext'"
      },
      {
        "command": "pretext-tools.generate",
        "key": "ctrl+alt+g",
        "mac": "cmd+alt+g",
        "when": "editorTextFocus && editorLangId == 'pretext'"
      },
      {
        "command": "pretext-tools.new",
        "key": "ctrl+alt+n",
        "mac": "cmd+alt+n",
        "when": "editorTextFocus && editorLangId == 'pretext'"
      },
      {
        "command": "pretext-tools.selectPretextCommand",
        "key": "ctrl+alt+p",
        "mac": "cmd+alt+p",
        "when": "editorTextFocus && editorLangId == 'pretext'"
      }
    ],
    "commands": [
      {
        "command": "pretext-tools.refresh",
        "title": "Refresh target list",
        "category": "PreTeXt"
      },
      {
        "command": "pretext-tools.selectPretextCommand",
        "title": "Run PreTeXt",
        "icon": "$(debug-start)",
        "category": "PreTeXt",
        "description": "Run selected PreTeXt command"
      },
      {
        "command": "pretext-tools.buildAny",
        "title": "Build (select target)",
        "icon": "$(debug-start)",
        "category": "PreTeXt",
        "description": "Build selected target from the project.ptx manifest."
      },
      {
        "command": "pretext-tools.buildDefault",
        "title": "Build default target",
        "category": "PreTeXt",
        "description": "Build the default target (first in the project.ptx manifest)."
      },
      {
        "command": "pretext-tools.new",
        "title": "New Project",
        "category": "PreTeXt"
      },
      {
        "command": "pretext-tools.view",
        "title": "View",
        "icon": "$(open-preview)",
        "category": "PreTeXt"
      },
      {
        "command": "pretext-tools.viewWatch",
        "title": "View HTML and watch",
        "category": "PreTeXt"
      },
      {
        "command": "pretext-tools.generate",
        "title": "Generate assets",
        "icon": "$(symbol-color)",
        "category": "PreTeXt"
      },
      {
        "command": "pretext-tools.deploy",
        "title": "Deploy to GitHub",
        "category": "PreTeXt"
      },
      {
        "command": "pretext-tools.updatePTX",
        "title": "Update installed PreTeXt version",
        "category": "PreTeXt",
        "description": "Checks for and installs the newest version of PreTeXt"
      },
      {
        "command": "pretext-tools.convertToPretext",
        "title": "Convert file to PreTeXt (using pandoc)",
        "category": "PreTeXt",
        "description": "Converts a selected file to PreTeXt using pandoc, which must be installed separately."
      }
    ],
    "xmlLanguageParticipants": [
      {
        "languageId": "pretext"
      }
    ],
    "configurationDefaults": {
      "xml.fileAssociations": [
        {
          "pattern": "**/source/**.ptx",
          "systemId": "https://raw.githubusercontent.com/PreTeXtBook/pretext/master/schema/pretext.rng"
        }
      ],
      "xml.references": [
        {
          "pattern": "**/source/**.ptx",
          "expressions": [
            {
              "from": "xref/@ref",
              "to": "@xml:id"
            }
          ]
        }
      ],
      "xml.validation.xInclude.enabled": true
    },
    "menus": {},
    "configuration": [
      {
        "title": "PreTeXt",
        "properties": {
          "pretext-tools.viewMethod": {
            "type": "string",
            "default": "Ask",
            "enum": [
              "Ask",
              "Live Preview",
              "CodeChat",
              "PreTeXT-CLI View"
            ],
            "markdownEnumDescriptions": [
              "Ask for view method each time (default).",
              "Use VS Code's [Live Preview](https://marketplace.visualstudio.com/items?itemName=ms-vscode.live-server) extension to view the 'web' target in a separate tab of VS Code. Only works if you have installed the Live Preview extension",
              "Use CodeChat to view the 'web' target in a separate tab of VS Code.  Auto-refreshes when a ptx files is saved (not recommended for large projects).  Requires CodeChat extension and CodeChat_Server installed via pip.",
              "Use the `pretext view` command from the PreTeXt CLI.  Works with all targets.  Opens the output in a separate application."
            ],
            "markdownDescription": "Select which method to use when viewing the output of a pretext project.  Leaving this at the default will ask for available methods each time.  Your choice will likely depend on the size of your project and whether you are building output other than the 'web' target."
          },
          "pretext-tools.installPretext": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Whether pretext-tools should try to use pip to install PreTeXt if it cannot find it."
          },
          "pretext-tools.schemaVersion": {
            "type": "string",
            "default": "Stable",
            "enum": [
              "Stable",
              "Experimental"
            ],
            "markdownEnumDescriptions": [
              "Use the stable schema matching your installed version of PreTeXt (default).",
              "Use the experimental/development schema matching your installed version of PreTeXt."
            ],
            "markdownDescription": "Select the version of the PreTeXt schema to validate against.  If you are using newer features, you might try to experimental schema, which isn't as stable, but will give you fewer warnings.  *Reload your workspace for these changes to take effect.*"
          }
        }
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run esbuild-base -- --minify",
    "esbuild-base": "esbuild ./src/extension.ts --bundle --outfile=out/extension.js --external:vscode --format=cjs --platform=node",
    "esbuild": "npm run esbuild-base -- --sourcemap",
    "esbuild-watch": "npm run esbuild-base -- --sourcemap --watch",
    "watch": "npm run esbuild",
    "test-compile": "tsc -p ./",
    "pretest": "npm run esbuild && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@types/glob": "^7.2.0",
    "@types/mocha": "^10.0.0",
    "@types/node": "16.x",
    "@types/vscode": "^1.68.0",
    "@typescript-eslint/eslint-plugin": "^5.27.0",
    "@typescript-eslint/parser": "^5.27.0",
    "esbuild": "^0.14.47",
    "eslint": "^8.16.0",
    "glob": "^8.0.3",
    "mocha": "^10.0.0",
    "prettier": "^2.7.1",
    "typescript": "^4.7.2",
    "vscode-test": "^1.5.2"
  },
  "dependencies": {
    "fs.promises.exists": "^1.1.3",
    "unified": "^10.1.2",
    "unist-util-visit": "^4.1.0",
    "@vscode/vsce": "^2.19.0",
    "ovsx": "^0.8.2",
    "xast-util-from-xml": "^2.0.1",
    "xast-util-to-string": "^2.0.0",
    "xast-util-to-xml": "^3.0.0"
  },
  "prettier": {
    "tabWidth": 2
  }
}
